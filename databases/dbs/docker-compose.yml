version: '3.9'

services:
  mysql:
    # https://hub.docker.com/_/mysql
    image: mysql 
#   ports:
#     - "127.0.0.1:3306:3306"
      # (optional) specify host IP(s) for the published port
      # of course, host firewall plays a part too
    environment:
      MYSQL_ROOT_PASSWORD: supersecret
  ui:
    # https://hub.docker.com/_/adminer
    image: adminer
    ports:
    - "127.0.0.1:8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: mysql # or pg, mongo (not OOB)
  pg:
    # https://hub.docker.com/_/postgres
    image: postgres
    environment:
      POSTGRES_PASSWORD: winkwink
  mongo:
    # https://hub.docker.com/_/mongo
    image: mongo
#   ports: "127.0.0.1:27017:27017"

#
# compare to docker cli:
#
# docker container run \
#   -it \
#   -p 127.0.0.1:3306:3306 \
#   -e MYSQL_ROOT_PASSWORD=superseret \
#   mysql 


#
## setting (General -> Use Docker Compose V2)
# docker-compose --version
# docker compose version
#
# docker compose up 
#   # ~ -it by default
#   docker compose up --detach # -d 
#
# docker compose exec db bash
#   mysql -u root -p
#   # provide password
#   show databases;
#   # etc
#   exit # when done
#
# docker compose start/stop
# docker compose ps 
# docker compose config
#   docker compose config | bat -l yml
# docker compose down # -rmv
#
# docker compose up --detach --remove-orphans

# mongo:
# dco exec mongo bash
#   mongo # open mongo cli
#   show dbs;
#   # etc
# dco ps # when exec'd in